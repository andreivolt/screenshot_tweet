#!/usr/bin/env python3

import argparse
from playwright.sync_api import sync_playwright
import sys
import re
from pathlib import Path

parser = argparse.ArgumentParser(description="Take a screenshot of a tweet.")
parser.add_argument("tweet_url", help="The tweet URL or tweet ID to screenshot.")
parser.add_argument("-o", "--output", help="Output file path or 'stdout'.", default="")

args = parser.parse_args()

SCREENSHOT_DIR = Path.home() / 'drive/tweets'

def screenshot_tweet(tweet_input, output_path):
    match = re.search(r"https?://(?:twitter.com|x.com)/.+/status/(\d+)(\?.*)?$", tweet_input)
    tweet_id = match.group(1) if match else None

    if not tweet_id:
        if tweet_input.isdigit():
            tweet_id = tweet_input
        else:
            print("Invalid input. Please provide a valid tweet URL or numeric tweet ID.")
            return

    with sync_playwright() as p:
        device = p.devices['Desktop Chrome HiDPI']
        browser = p.webkit.launch()
        context = browser.new_context(**device)

        page = context.new_page()
        page.emulate_media(color_scheme='dark')
        page.goto(f"https://twitter.com/i/web/status/{tweet_id}")

        page.mouse.wheel(0, -100)
        page.wait_for_timeout(1000)
        page.mouse.wheel(0, 100)
        page.wait_for_timeout(1000)

        try:
            page.wait_for_selector('#layers', timeout=3000)
        except:
            pass

        page.evaluate("""() => {
            document.querySelector('#layers').remove()

            document.querySelector('[aria-label="Home timeline"]').firstChild.remove()

            document.querySelectorAll('[data-testid="caret"]').forEach(el => el.remove())

            const replyNode = document.querySelector('[aria-label="Reply"]');
            if (replyNode) {
                let parent = replyNode.parentNode
                while (parent && parent.getAttribute('role') !== 'group') parent = parent.parentNode
                if (parent) parent.remove()
            }
        }""")

        screenshot_data = page.locator('[data-testid="tweet"]').screenshot()

        if output_path == "-":
            sys.stdout.buffer.write(screenshot_data)
        else:
            if output_path:
                output_path_obj = Path(output_path)
                if output_path_obj.is_dir():
                    filename = f"{tweet_id}.png"
                    screenshot_path = output_path_obj / filename
                else:
                    screenshot_path = output_path_obj
            else:
                filename = f"{tweet_id}.png"
                screenshot_path = SCREENSHOT_DIR / filename

            screenshot_path.parent.mkdir(parents=True, exist_ok=True)
            with open(screenshot_path, 'wb') as f:
                f.write(screenshot_data)
            print(f"screenshot saved to: {screenshot_path}")

        browser.close()

if __name__ == "__main__":
    if args.output == "-":
        screenshot_tweet(args.tweet_url, "-")
    else:
        screenshot_path = args.output if args.output else SCREENSHOT_DIR / f"{args.tweet_url.split('/')[-1]}.png"
        screenshot_tweet(args.tweet_url, str(screenshot_path))
